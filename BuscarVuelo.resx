<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgAAAFkAAACbAAAAywAA
        AOsAAAD7AAAA+wAAAOsAAADLAAAAmwAAAFkAAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAJwAAAD1AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPUAAACdAAAAJQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQAAAIsAAAD6AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD6AAAAiwAA
        AAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMAAADSAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA0gAAACMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvAAAA6QAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAANwAAADYAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA6gAAAC8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgAA
        AOkAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD4AAAAMwAA
        AC0AAAD2AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADbAAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AgPgEAEH8AgAj/gEAF/8AgB//wEA///Ag/8=
</value>
  </data>
</root>